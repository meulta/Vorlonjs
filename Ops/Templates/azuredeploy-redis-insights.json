{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "The name of the web app that you wish to create."
            }
        },
        "hostingPlanName": {
            "type": "string",
            "metadata": {
                "description": "The name of the App Service plan to use for hosting the web app."
            }
        },
        "siteLocation": {
            "type": "string",
            "metadata": {
                "description": "The location to use for creating the web app and hosting plan. It must be one of the Azure locations that support web apps."
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Free",
            "metadata": {
                "description": "The pricing tier for the hosting plan."
            }
        },
        "workerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0",
            "metadata": {
                "description": "The instance size of the hosting plan (small, medium, or large)."
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue": "https://github.com/MicrosoftDX/Vorlonjs.git",
            "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "development-0.0.16",
            "metadata": { 
                "description": "The branch of the GitHub repository to use."
            }
        },
        "RedisName": {
          "type": "string",
          "defaultValue": "VorlonjsRedis"
        },
        "RedisLocation": {
            "type": "string",
          "defaultValue": "East Us"
        },
        "RedisSKUName": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic"
        },
        "RedisSKUFamily": {
            "type": "string",
            "allowedValues": [
                "C"
            ],
            "defaultValue": "C"
        },
        "RedisSKUCapacity": {
            "type": "int",
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 0
        },
        "RedisRedisVersion": {
            "type": "string",
            "allowedValues": [
                "2.8"
            ],
            "defaultValue": "2.8"
        }
    },
  "resources":[
    {
      "apiVersion":"2015-04-01",
      "name":"[parameters('hostingPlanName')]",
      "type":"Microsoft.Web/serverfarms",
      "location":"[parameters('siteLocation')]",
      "properties":{
        "name":"[parameters('hostingPlanName')]",
        "sku":"[parameters('sku')]",
        "workerSize":"[parameters('workerSize')]",
        "numberOfWorkers":1
      }
    },
    {
      "apiVersion":"2015-04-01",
      "name":"[parameters('siteName')]",
      "type":"Microsoft.Web/sites",
      "location":"[parameters('siteLocation')]",
      "dependsOn":[
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "properties":{
        "serverFarmId":"[parameters('hostingPlanName')]"
      },
      "resources":[
       { 
           "apiVersion": "2014-04-01", 
           "type": "config", 
           "name": "web", 
           "dependsOn": [ 
             "[concat('Microsoft.Web/Sites/', parameters('siteName'))]" 
           ], 
           "properties": { 
             "webSocketsEnabled": true,
             "virtualApplications": [
              {
                "virtualPath": "/",
                "physicalPath": "site\\wwwroot\\Server",
                "preloadEnabled": false,
                "virtualDirectories": null
              }
             ]
           }
       },
       {
          "apiVersion":"2015-04-01",
          "name":"web",
          "type":"sourcecontrols",
          "dependsOn":[
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties":{
            "RepoUrl":"[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration":true
          }
        }
      ]
    },
      {
          "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
          "type": "Microsoft.Insights/autoscalesettings",
          "location": "East US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
          ],
          "tags": {
              "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
              "displayName": "Insights AutoScale"
          },
          "properties": {
              "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
              "profiles": [
                  {
                      "name": "Default",
                      "capacity": {
                          "minimum": 1,
                          "maximum": 2,
                          "default": 1
                      },
                      "rules": [
                          {
                              "metricTrigger": {
                                  "metricName": "CpuPercentage",
                                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                                  "timeGrain": "PT1M",
                                  "statistic": "Average",
                                  "timeWindow": "PT10M",
                                  "timeAggregation": "Average",
                                  "operator": "GreaterThan",
                                  "threshold": null
                              },
                              "scaleAction": {
                                  "direction": "Increase",
                                  "type": "ChangeCount",
                                  "value": 1,
                                  "cooldown": "PT10M"
                              }
                          },
                          {
                              "metricTrigger": {
                                  "metricName": "CpuPercentage",
                                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                                  "timeGrain": "PT1M",
                                  "statistic": "Average",
                                  "timeWindow": "PT1H",
                                  "timeAggregation": "Average",
                                  "operator": "LessThan",
                                  "threshold": null
                              },
                              "scaleAction": {
                                  "direction": "Decrease",
                                  "type": "ChangeCount",
                                  "value": 1,
                                  "cooldown": "PT1H"
                              }
                          }
                      ]
                  }
              ],
              "enabled": false,
              "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
          }
      },
      {
          "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
          "type": "Microsoft.Insights/alertrules",
          "location": "East US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
          ],
          "tags": {
              "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
              "displayName": "CPUHigh Insights"
          },
          "properties": {
              "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
              "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
              "isEnabled": false,
              "condition": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                  "dataSource": {
                      "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                      "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                      "metricName": "CpuPercentage"
                  },
                  "operator": "GreaterThan",
                  "threshold": 90,
                  "windowSize": "PT15M"
              },
              "action": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                  "sendToServiceOwners": true,
                  "customEmails": [ ]
              }
          }
      },
      {
          "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
          "type": "Microsoft.Insights/alertrules",
          "location": "East US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
          ],
          "tags": {
              "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
              "displayName": "LongHttpQueue Insights"
          },
          "properties": {
              "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
              "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
              "isEnabled": false,
              "condition": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                  "dataSource": {
                      "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                      "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                      "metricName": "HttpQueueLength"
                  },
                  "operator": "GreaterThan",
                  "threshold": null,
                  "windowSize": "PT5M"
              },
              "action": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                  "sendToServiceOwners": true,
                  "customEmails": [ ]
              }
          }
      },
      {
          "name": "[concat('ServerErrors ', 'Insights')]",
          "type": "Microsoft.Insights/alertrules",
          "location": "East US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
          ],
          "tags": {
              "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource",
              "displayName": "ServerErrors Insights"
          },
          "properties": {
              "name": "[concat('ServerErrors ', parameters('siteName'))]",
              "description": "[concat(parameters('siteName'), ' has some server errors, status code 5xx.')]",
              "isEnabled": false,
              "condition": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                  "dataSource": {
                      "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                      "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                      "metricName": "Http5xx"
                  },
                  "operator": "GreaterThan",
                  "threshold": null,
                  "windowSize": "PT5M"
              },
              "action": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                  "sendToServiceOwners": true,
                  "customEmails": [ ]
              }
          }
      },
      {
          "name": "[concat('ForbiddenRequests ', 'Insights')]",
          "type": "Microsoft.Insights/alertrules",
          "location": "East US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
          ],
          "tags": {
              "displayName": "ForbiddenRequests Insights"
          },
          "properties": {
              "name": "[concat('ForbiddenRequests ', parameters('siteName'))]",
              "description": "[concat(parameters('siteName'), ' has some requests that are forbidden, status code 403.')]",
              "isEnabled": false,
              "condition": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                  "dataSource": {
                      "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                      "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                      "metricName": "Http403"
                  },
                  "operator": "GreaterThan",
                  "threshold": 0,
                  "windowSize": "PT5M"
              },
              "action": {
                  "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                  "sendToServiceOwners": true,
                  "customEmails": [ ]
              }
          }
      },
      {
          "name": "Insights",
          "type": "Microsoft.Insights/components",
          "location": "Central US",
          "apiVersion": "2014-04-01",
          "dependsOn": [
              "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
          ],
          "tags": {
              "displayName": "Component Insights"
          },
          "properties": {
              "applicationId": "[parameters('siteName')]"
          }
      },
      {
          "name": "[parameters('RedisName')]",
          "type": "Microsoft.Cache/Redis",
          "location": "[parameters('RedisLocation')]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [ ],
          "tags": {
              "displayName": "Redis"
          },
          "properties": {
              "sku": {
                  "name": "[parameters('RedisSKUName')]",
                  "family": "[parameters('RedisSKUFamily')]",
                  "capacity": "[parameters('RedisSKUCapacity')]"
              },
              "redisVersion": "[parameters('RedisRedisVersion')]"
          }
      }
  ]
}

